[{"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\index.js":"1","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\App.js":"2","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\context\\lead\\LeadState.js":"3","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\splash\\TakeMeOffTheList.js":"4","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\splash\\FreshStart.js":"5","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\pages\\TaxGroup.js":"6","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\pages\\LienViewer.js":"7","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\context\\types.js":"8","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\context\\lead\\leadContext.js":"9","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\context\\lead\\leadReducer.js":"10","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\utils\\setAuthToken.js":"11","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\layout\\Footer.js":"12","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\layout\\StickyNavbar.js":"13","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\layout\\About.js":"14","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\layout\\Hero.js":"15","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\contactus\\ContactForm.js":"16","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\contactus\\Feedback.js":"17","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\About\\Blogs.js":"18","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\lienviewer\\LienSearch.js":"19","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\lienviewer\\LienHero.js":"20","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\lienviewer\\StateItem.js":"21","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\layout\\SmallForm.js":"22","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\About\\BlogItem.js":"23","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\consultants\\PlanCards.js":"24","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\solutions\\ToolSelect.js":"25","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\consultants\\Company.js":"26","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\About\\Modal.js":"27","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\About\\BlogContent.js":"28","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\consultants\\EmployeeItem.js":"29"},{"size":198,"mtime":1606950489360,"results":"30","hashOfConfig":"31"},{"size":1454,"mtime":1606951685386,"results":"32","hashOfConfig":"31"},{"size":31236,"mtime":1606950488588,"results":"33","hashOfConfig":"31"},{"size":2678,"mtime":1606950488526,"results":"34","hashOfConfig":"31"},{"size":5267,"mtime":1606950488522,"results":"35","hashOfConfig":"31"},{"size":1010,"mtime":1606950488577,"results":"36","hashOfConfig":"31"},{"size":13198,"mtime":1606950488576,"results":"37","hashOfConfig":"31"},{"size":7437,"mtime":1606950488592,"results":"38","hashOfConfig":"31"},{"size":111,"mtime":1606950488589,"results":"39","hashOfConfig":"31"},{"size":9409,"mtime":1606950488590,"results":"40","hashOfConfig":"31"},{"size":253,"mtime":1606950489362,"results":"41","hashOfConfig":"31"},{"size":740,"mtime":1606950488562,"results":"42","hashOfConfig":"31"},{"size":1629,"mtime":1606950488494,"results":"43","hashOfConfig":"31"},{"size":5165,"mtime":1606950488561,"results":"44","hashOfConfig":"31"},{"size":1627,"mtime":1606950488563,"results":"45","hashOfConfig":"31"},{"size":2645,"mtime":1606950488557,"results":"46","hashOfConfig":"31"},{"size":5515,"mtime":1606950488558,"results":"47","hashOfConfig":"31"},{"size":7819,"mtime":1606950488533,"results":"48","hashOfConfig":"31"},{"size":1717,"mtime":1606950488569,"results":"49","hashOfConfig":"31"},{"size":1633,"mtime":1606950488568,"results":"50","hashOfConfig":"31"},{"size":468,"mtime":1606950488570,"results":"51","hashOfConfig":"31"},{"size":1599,"mtime":1606950488567,"results":"52","hashOfConfig":"31"},{"size":939,"mtime":1606950488530,"results":"53","hashOfConfig":"31"},{"size":4791,"mtime":1606950488552,"results":"54","hashOfConfig":"31"},{"size":8125,"mtime":1606950488581,"results":"55","hashOfConfig":"31"},{"size":2031,"mtime":1606950488550,"results":"56","hashOfConfig":"31"},{"size":485,"mtime":1606950488535,"results":"57","hashOfConfig":"31"},{"size":698,"mtime":1606950488529,"results":"58","hashOfConfig":"31"},{"size":2523,"mtime":1606950488551,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"vrsim2",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\index.js",[],["123","124"],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\App.js",["125"],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\context\\lead\\LeadState.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import React, { useReducer, useContext } from \"react\";\r\nimport LeadContext from \"./leadContext\";\r\n\r\n\r\nimport LeadReducer from \"./leadReducer\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\nimport {\r\n  UPLOAD_FILE,\r\n  SET_FILE,\r\n  PARSE_LIST,\r\n  UPDATE_LEAD,\r\n  DELETE_LEADS,\r\n  MAKE_DNC,\r\n  UPDATE_CLIENT,\r\n  ADD_LEXISPROSPECT,\r\n  ADD_LEXIS,\r\n  SUBMIT_LEAD,\r\n  GET_LIEN,\r\n  SEARCH_LIENS,\r\n  SET_CALLS,\r\n  GET_LEAD,\r\n  GET_LEADS,\r\n  SET_CURRENT,\r\n  LET_CALL,\r\n  CLEAR_LIENS,\r\n  POST_LEAD,\r\n  CLEAR_LEAD,\r\n  CLEAR_NUMBER,\r\n  POST_LOGICS,\r\n  UPDATE_PROSPECT,\r\n  CLEAR_LEADFIELDS,\r\n  CLEAR_RECENTLEAD,\r\n  SET_RECENTLEAD,\r\n  GET_NOTES,\r\n  PUT_NOTE,\r\n  SET_NOTE,\r\n  SET_NOTES,\r\n  POST_NOTE,\r\n  DELETE_NOTE,\r\n  SET_PROSPECT,\r\n  GET_NAME,\r\n  PUSH_WORKER,\r\n  PUT_RESO,\r\n  PUT_PAYMENTSCHEDULE,\r\n  PUT_PAYMENTINFO,\r\n  PUT_PAYMENTSCHEDULEITEM,\r\n  SET_CURRENTMETHOD,\r\n  SET_CURRENTCLIENT,\r\n  CLEAR_CURRENTMETHOD,\r\n  CLEAR_CURRENTCLIENT,\r\n  DELETE_PAYMENTMETHOD,\r\n  DELETE_PAYMENTSCHEDULEITEM,\r\n  DELETE_WORKER,\r\n  GET_PAYMENTMETHOD,\r\n  UPDATE_PAYMENTSTATUS,\r\n  UPDATE_CLIENTSTATUS,\r\n  GET_TODAYSPROSPECTS,\r\n  GET_FILE,\r\n  POP_DOC,\r\n  SET_DOC,\r\n  SET_DOCS,\r\n  DELETE_DUPS,\r\n  SET_WORKERS,\r\n  SEND_EMAIL,\r\n  SET_FILTERS,\r\n  DELETE_DOC,\r\n} from \"../types\";\r\n\r\nconst LeadState = (props) => {\r\n  const initialState = {\r\n    selectedFile: null,\r\n    caseWorkers: [],\r\n    loaded: null,\r\n    currentNote: null,\r\n    bcc: [],\r\n    docs: [],\r\n    vars: [],\r\n    doc: null,\r\n    mailList: [],\r\n    list: [],\r\n    mailObject: null,\r\n    leads: [],\r\n    lead: null,\r\n    dncArray: [],\r\n    liens: [],\r\n    leads: [],\r\n    prospects: [],\r\n    prospect: {},\r\n    client: {},\r\n    clients: [],\r\n    lien: {},\r\n    lead: {},\r\n    note: {},\r\n    current: null,\r\n    currentMethod: null,\r\n    currentClient: null,\r\n    callIn: null,\r\n    calls: [],\r\n    note: {},\r\n    notes: [],\r\n    filters: [],\r\n    filters1: [],\r\n    worker: null,\r\n    prospectsRes: [],\r\n    workers: [],\r\n    workers1: [],\r\n    text: \"\",\r\n    recentLeads: [],\r\n    todaysLeads: [],\r\n    fullName: null,\r\n    paymentMethod: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(LeadReducer, initialState);\r\n\r\n  let logicsId;\r\n  let logicsPw;\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    logicsId = process.env.REACT_APP_LOGICS_ID;\r\n    logicsPw = process.env.REACT_APP_LOGICS_PW;\r\n  } else {\r\n    logicsId = process.env.REACT_APP_LOGICS_ID;\r\n    logicsPw = process.env.REACT_APP_LOGICS_PW;\r\n  }\r\n\r\n  const setCalls = async (phone) => {\r\n    const res = await axios.get(`/api/prospects/calls?q=${phone}`);\r\n\r\n    console.log(res.data);\r\n\r\n    dispatch({\r\n      type: SET_CALLS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const addLexis = async (file, current) => {\r\n    const res = await axios.put(`/api/leads/${current.lienid}/pdfs`, file);\r\n\r\n    dispatch({\r\n      type: ADD_LEXIS,\r\n      payload: res.data,\r\n    });\r\n\r\n    setCurrent(res.data);\r\n  };\r\n\r\n  const addLexisProspect = async (file, prospect) => {\r\n    const res = await axios.put(`/api/prospects/${prospect._id}/pdfs`, file);\r\n\r\n    dispatch({\r\n      type: ADD_LEXISPROSPECT,\r\n      payload: res.data,\r\n    });\r\n\r\n    getProspect(prospect._id);\r\n  };\r\n\r\n  const sendEmail = async (formData) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(`/api/prospects/email`, formData, config);\r\n    dispatch({\r\n      type: SEND_EMAIL,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const addLead = async (prospect) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    console.log(prospect, \"1111111111\");\r\n\r\n    const res = await axios.post(\"/api/prospects/\", prospect, config);\r\n\r\n    dispatch({\r\n      type: POST_LEAD,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const setFilters = (array) => {\r\n    state.filters = state.filters.concat(array);\r\n    function filterByCount(array, count) {\r\n      return array.filter(function (value) {\r\n        return (\r\n          array.filter(function (v) {\r\n            return v === value;\r\n          }).length === count\r\n        );\r\n      });\r\n    }\r\n    state.filters = filterByCount(state.filters, 1);\r\n\r\n    dispatch({ type: SET_FILTERS, payload: state.filters });\r\n  };\r\n\r\n  // Clear Liens\r\n  const clearLead = () => {\r\n    dispatch({ type: CLEAR_LEAD });\r\n  };\r\n\r\n  const clearLeadFields = () => {\r\n    dispatch({ type: CLEAR_LEADFIELDS });\r\n  };\r\n\r\n  const clearCurrentMethod = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENTMETHOD,\r\n    });\r\n  };\r\n\r\n  const clearCurrentClient = () => {\r\n    dispatch({\r\n      type: CLEAR_CURRENTCLIENT,\r\n    });\r\n  };\r\n\r\n  const clearRecentLead = () => {\r\n    dispatch({ type: CLEAR_RECENTLEAD });\r\n  };\r\n\r\n  const clearNumber = () => {\r\n    dispatch({ type: CLEAR_NUMBER });\r\n  };\r\n\r\n  const getTodaysProspects = async () => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.get(`/api/prospects/today`);\r\n\r\n    dispatch({\r\n      type: GET_TODAYSPROSPECTS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n  const popDoc = async (prospect) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    console.log(prospect);\r\n\r\n    const res = await axios.post(`/api/prospects/form`, prospect, config);\r\n    dispatch({\r\n      type: POP_DOC,\r\n      payload: res.data,\r\n    });\r\n\r\n    setDoc(res.data);\r\n  };\r\n\r\n  const getProspectName = async (clientId) => {\r\n    console.log(clientId);\r\n\r\n    const res = await axios.get(`/api/prospects/${clientId}/fullName`);\r\n\r\n    let fullName = \"\";\r\n\r\n    if (res.data != null) {\r\n      fullName = res.data.fullName;\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_NAME,\r\n      payload: fullName,\r\n    });\r\n  };\r\n\r\n  const getPaymentMethod = async (payment) => {\r\n    console.log(payment);\r\n    const res = await axios.get(\r\n      `/api/prospects/paymentMethods?q=${payment._id}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_PAYMENTMETHOD,\r\n      payload: res.data,\r\n    });\r\n\r\n    console.log(res.data);\r\n\r\n    const { paymentData, clientId } = res.data;\r\n\r\n    const paymentMethod = paymentData;\r\n    setCurrentMethod(paymentMethod);\r\n    setCurrentClient(clientId);\r\n  };\r\n\r\n  const setNotes = (notes) => {\r\n    console.log(notes);\r\n    dispatch({ type: SET_NOTES, payload: notes });\r\n  };\r\n\r\n  const putNote = async (note, user, prospect) => {\r\n    const noteObj = {\r\n      note: note,\r\n      user: user,\r\n    };\r\n\r\n    const { notes } = prospect;\r\n    const res = await axios.put(\r\n      `/api/prospects/${prospect._id}/notes/`,\r\n      noteObj\r\n    );\r\n    setNotes(notes);\r\n    setNotes(null);\r\n\r\n    dispatch({\r\n      type: PUT_NOTE,\r\n      payload: res.data,\r\n    });\r\n    getProspect(prospect._id);\r\n  };\r\n\r\n  const getNotes = async (prospect) => {\r\n    const res = await axios.get(`/api/prospects/${prospect._id}/notes`);\r\n\r\n    dispatch({\r\n      type: GET_NOTES,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const postNote = async (note, prospect) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { _id, notes } = prospect;\r\n\r\n    const res = await axios.post(`/api/prospects/${_id}/notes`, note, config);\r\n    setNotes(notes);\r\n    setNotes(null);\r\n    dispatch({\r\n      type: POST_NOTE,\r\n      payload: res.data,\r\n    });\r\n    getProspect(prospect._id);\r\n  };\r\n\r\n  const setCurrentNote = (currentNote) => {\r\n    console.log(currentNote);\r\n    dispatch({\r\n      type: SET_NOTE,\r\n      payload: currentNote,\r\n    });\r\n  };\r\n\r\n  const deleteNote = async (note, prospect) => {\r\n    const { _id, notes } = prospect;\r\n    const { id } = note;\r\n\r\n    await axios.delete(`/api/prospects/${_id}/notes?q=${id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_NOTE,\r\n      payload: id,\r\n    });\r\n    getProspect(prospect._id);\r\n  };\r\n\r\n  const deletePaymentMethod = async (paymentMethod, prospect) => {\r\n    const { paymentMethods } = prospect;\r\n    const { _id } = paymentMethod;\r\n\r\n    await axios.delete(\r\n      `/api/prospects/${prospect._id}/paymentMethods?q=${_id}`\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_PAYMENTMETHOD,\r\n      payload: _id,\r\n    });\r\n    getProspect(prospect._id);\r\n  };\r\n\r\n  const deletePaymentScheduleItem = async (payment, prospect) => {\r\n    const { paymentMethods } = prospect;\r\n    const { _id } = payment;\r\n\r\n    await axios.delete(\r\n      `/api/prospects/${prospect._id}/paymentSchedule?q=${_id}`\r\n    );\r\n\r\n    dispatch({\r\n      type: DELETE_PAYMENTSCHEDULEITEM,\r\n      payload: _id,\r\n    });\r\n    getProspect(prospect._id);\r\n    updatePaymentStatus(prospect);\r\n  };\r\n\r\n  const deleteWorker = async (caseWorker, prospect) => {\r\n    const { _id } = caseWorker;\r\n\r\n    await axios.delete(`/api/prospects/${prospect._id}/caseWorkers?q=${_id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_WORKER,\r\n      payload: _id,\r\n    });\r\n\r\n    getProspect(prospect._id);\r\n  };\r\n  //Search Liens\r\n\r\n  const setRecentLead = (recentLead) => {\r\n    dispatch({ type: SET_RECENTLEAD, payload: recentLead });\r\n  };\r\n\r\n  const setCurrentMethod = (paymentMethod) => {\r\n    dispatch({ type: SET_CURRENTMETHOD, payload: paymentMethod });\r\n  };\r\n\r\n  const setCurrentClient = (clientId) => {\r\n    dispatch({ type: SET_CURRENTCLIENT, payload: clientId });\r\n  };\r\n\r\n  // Set Lien in Ship Em Form\r\n\r\n  const setCurrent = (current) => {\r\n    dispatch({ type: SET_CURRENT, payload: current });\r\n  };\r\n\r\n  // Set Call in Ship Em Form\r\n  const letCall = (number) => {\r\n    dispatch({ type: LET_CALL, payload: number });\r\n  };\r\n\r\n  // get id and set name id value pair for recent array\r\n\r\n  const getProspect = async (_id) => {\r\n    const res = await axios.get(`/api/prospects/${_id}`);\r\n\r\n    const prospect = res.data;\r\n    const notes = { prospect };\r\n    setNotes(notes);\r\n    setNotes(null);\r\n    dispatch({\r\n      type: GET_LEAD,\r\n      payload: prospect,\r\n    });\r\n  };\r\n\r\n  // Lead Seach in stacks\r\n  const getProspects = async (text, filters) => {\r\n    const res = await axios.get(`/api/prospects?q=${text}`);\r\n\r\n    const prospects = res.data;\r\n\r\n    const prospectsRes =\r\n      state.filters.length === 0\r\n        ? prospects\r\n        : prospects.filter((prospect) => {\r\n            let searchResults = [];\r\n            return state.filters.some((filter) => {\r\n              if (filter.includes(\" \")) {\r\n                for (const array of prospect.caseWorkers.originators) {\r\n                  if (array.name === filter) return array;\r\n                }\r\n                for (const array1 of prospect.caseWorkers.loanProcessors) {\r\n                  if (array1.name === filter) return array1;\r\n                }\r\n                for (const array2 of prospect.caseWorkers.documentProcessors) {\r\n                  if (array2.name === filter) return array2;\r\n                }\r\n                for (const array3 of prospect.caseWorkers.upsells) {\r\n                  if (array3.name === filter) return array3;\r\n                }\r\n                for (const array4 of prospect.caseWorkers.federalReso) {\r\n                  if (array4.name === filter) return array4;\r\n                }\r\n                for (const array5 of prospect.caseWorkers.stateReso) {\r\n                  if (array5.name === filter) return array5;\r\n                }\r\n                for (const array6 of prospect.caseWorkers.taxPreparers) {\r\n                  if (array6.name === filter) return array6;\r\n                }\r\n              } else {\r\n                let searchResults = [];\r\n                switch (filter) {\r\n                  case \"hasRepresentation\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n\r\n                  case \"hasFederalFile\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n                  case \"hasHardship\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n                  case \"hasStateFile\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n                  case \"hasPaymentPlan\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n                  case \"hasOffer\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n                  case \"hasAppeal\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n                  case \"hasCorp\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n                  case \"hasAnnuity\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n\r\n                  case \"hasAnnuity\":\r\n                    for (const array of prospect.resoStatus.representation) {\r\n                      if (array.id) return searchResults.concat(array);\r\n                    }\r\n                    break;\r\n                }\r\n              }\r\n            });\r\n          });\r\n\r\n    dispatch({\r\n      type: GET_LEADS,\r\n      payload: prospectsRes,\r\n    });\r\n  };\r\n\r\n  const deleteDups = async (match) => {\r\n    const lienid = match.lienid;\r\n    const res = await axios.delete(`/api/prospects/lienid?q=${lienid}`);\r\n\r\n    dispatch({\r\n      type: DELETE_DUPS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const getMyLeads = async (text, user) => {\r\n    const config = {\r\n      params: {\r\n        createdBy: `${user._id}`,\r\n        claimedBy: `${user._id}`,\r\n        q: `${text}`,\r\n      },\r\n    };\r\n    const res = await axios.get(\"/api/prospects\", config);\r\n\r\n    const prospects = res.data;\r\n\r\n    dispatch({\r\n      type: GET_LEADS,\r\n      payload: prospects,\r\n    });\r\n  };\r\n\r\n  /*\r\n    const searchLeadDates = async text => { \r\n      \r\n      const config = {\r\n        params: {\r\n         createdBy:`${user._id}`,\r\n         claimedBy:`${user._id}`,\r\n         q:`${text}`\r\n        }\r\n      };\r\n      const res = await axios.get('/api/leads', config);\r\n    \r\n      const leads = res.data \r\n  \r\n      dispatch({\r\n        type: GET_LEADS,\r\n        payload: leads\r\n      });  \r\n      \r\n      console.log(res.data)\r\n      console.log(leads)\r\n      \r\n    }  \r\n  \r\n    const searchLeadStatus = async text => { \r\n      \r\n      const config = {\r\n        params: {\r\n         isClaimed:`${}`,\r\n         isClosed:`${user._id}`,\r\n         isPaid:`${text}`\r\n        }\r\n      };\r\n      const res = await axios.get('/api/leads', config);\r\n    \r\n      const leads = res.data \r\n  \r\n      dispatch({\r\n        type: GET_LEADS,\r\n        payload: leads\r\n      });  \r\n      \r\n      console.log(res.data)\r\n      console.log(leads)\r\n      \r\n    }\r\n  */\r\n\r\n  // Update Lead\r\n\r\n  const updateProspect = async (leadFields, prospect) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const res = await axios.put(\r\n        `/api/prospects/${prospect._id}`,\r\n        leadFields,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: UPDATE_PROSPECT,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //post to logics\r\n  const postLogics = async (current) => {\r\n    const config = {\r\n      headers: {\r\n        \"Authorization\": `Basic ${logicsId}|${logicsPw}`,\r\n      },\r\n    };\r\n\r\n    const {\r\n      name,\r\n      address,\r\n      city,\r\n      state,\r\n      zip,\r\n      plaintiff,\r\n      amount,\r\n      email,\r\n      lexId,\r\n      compliant,\r\n      filingStatus,\r\n      cpa,\r\n      ssn,\r\n      phone,\r\n      note,\r\n    } = current;\r\n\r\n    setAuthToken(null);\r\n\r\n    const res = await axios.post(\r\n      `https://nattax.irslogics.com/postLead.aspx?FNAME=${name}&&ADDRESS=${address}&&CITY=${city}&&ZIP=${zip}&&TAX_RELIEF_TAX_AMOUNT=${amount}&&CELL_PHONE=${phone}&&EMAIL=${email}&&NOTES=${plaintiff}`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: POST_LOGICS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  // Clear Liens\r\n  const clearLiens = () => {\r\n    dispatch({ type: CLEAR_LIENS });\r\n  };\r\n\r\n  const searchLeads = async (text) => {\r\n    const res = await axios.get(`/api/leads/search?q=${text}`);\r\n\r\n    dispatch({\r\n      type: SEARCH_LIENS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const setSelectedFile = (selectedFile) => {\r\n    console.log(selectedFile);\r\n    dispatch({ type: SET_FILE, payload: selectedFile });\r\n  };\r\n\r\n  const setProspect = (prospect) => {\r\n    console.log(prospect);\r\n    dispatch({ type: SET_PROSPECT, payload: prospect });\r\n  };\r\n\r\n  const deleteLeads = async (leads) => {\r\n    try {\r\n      await axios.delete(`/api/leads/`, leads);\r\n\r\n      dispatch({\r\n        type: DELETE_LEADS,\r\n        payload: leads,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const deleteDoc = async (prospect, doc) => {\r\n    console.log(prospect);\r\n\r\n    try {\r\n      const name = doc.name.slice(\r\n        doc.name.indexOf(\"/\") + 1,\r\n        doc.name.lastIndexOf(\"/\")\r\n      );\r\n\r\n      console.log(doc.name);\r\n      const res = await axios.delete(\r\n        `/api/prospects/${prospect._id}/resoStatus/${name}/${doc._id}`\r\n      );\r\n\r\n      dispatch({\r\n        type: DELETE_DOC,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const submitLead = async (form) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.post(`/api/leads/forms`, form, config);\r\n\r\n    dispatch({\r\n      type: SUBMIT_LEAD,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const updateLead = async (campaign) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(`/api/leads/`, campaign, config);\r\n\r\n    dispatch({\r\n      type: UPDATE_LEAD,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const makeDNC = async (lead) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.put(`/api/leads/${lead._id}/dnc`, lead, config);\r\n\r\n    dispatch({\r\n      type: MAKE_DNC,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const pushWorker = async (user, prospect, group) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { caseWorkers } = group;\r\n\r\n    const location = Object.values(caseWorkers)\r\n      .toString()\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\")\r\n      .replace(\",\", \"\");\r\n\r\n    console.log(location);\r\n\r\n    const res = await axios.put(\r\n      `/api/prospects/${prospect._id}/caseWorkers/${location}`,\r\n      user,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PUSH_WORKER,\r\n      payload: res.data,\r\n    });\r\n    getProspect(prospect._id);\r\n  };\r\n\r\n  const parseDb = async (query) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const qCheck = Object.values(query).toString().length;\r\n\r\n    const q = Object.values(query).toString();\r\n\r\n    console.log(q);\r\n    const res = await axios.get(\r\n      `/api/${qCheck > 5 ? \"prospects\" : \"leads\"}/status?q=${q}`,\r\n      q,\r\n      config\r\n    );\r\n\r\n    const mailList = res.data;\r\n\r\n    console.log(mailList);\r\n    dispatch({\r\n      type: PARSE_LIST,\r\n      payload: mailList,\r\n    });\r\n  };\r\n\r\n  const postResoStatus = async (prospect, formData, endpoint, config) => {\r\n    console.log(formData);\r\n    const res = await axios.put(\r\n      `/api/prospects/${prospect._id}/resoStatus/${endpoint}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PUT_RESO,\r\n      payload: res.data,\r\n    });\r\n    setDocs(prospect);\r\n    getProspect(prospect._id);\r\n  };\r\n\r\n  const putResoStatus = async (prospect, formData, endpoint, config, doc) => {\r\n    function search(nameKey, myArray) {\r\n      for (var i = 0; i < myArray.length; i++) {\r\n        if (myArray[i].name.includes(nameKey)) {\r\n          return myArray[i];\r\n        }\r\n      }\r\n    }\r\n\r\n    const searchedArray = eval(\"prospect.resoStatus.\" + endpoint);\r\n\r\n    const assignment = search(doc.name, searchedArray);\r\n\r\n    const res = await axios.put(\r\n      `/api/prospects/${prospect._id}/resoStatus/${endpoint}/${assignment._id}`,\r\n      formData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PUT_RESO,\r\n      payload: res.data,\r\n    });\r\n    setDocs(prospect);\r\n    getProspect(prospect._id);\r\n  };\r\n\r\n  const getResoStatus = async (prospect, doc) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      responseType: \"blob\",\r\n    };\r\n\r\n    const string = doc.id;\r\n\r\n    console.log(string);\r\n\r\n    const res = await axios.get(\r\n      `/api/prospects/${prospect._id}/resoStatus?q=${string}`,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_FILE,\r\n      payload: res.data,\r\n    });\r\n\r\n    setDoc(res.data);\r\n  };\r\n\r\n  const setDoc = (document) => {\r\n    dispatch({ type: SET_DOC, payload: document });\r\n  };\r\n\r\n  const setDocs = (prospect) => {\r\n    const { resoStatus } = prospect;\r\n\r\n    const {\r\n      representation,\r\n      federalFile,\r\n      stateFile,\r\n      paymentPlan,\r\n      appeal,\r\n      annuity,\r\n      corp,\r\n      offer,\r\n      hardship,\r\n    } = resoStatus;\r\n\r\n    const docs = representation.concat(\r\n      federalFile,\r\n      stateFile,\r\n      paymentPlan,\r\n      appeal,\r\n      annuity,\r\n      corp,\r\n      offer,\r\n      hardship\r\n    );\r\n\r\n    dispatch({ type: SET_DOCS, payload: docs });\r\n  };\r\n\r\n  const putPaymentMethod = async (state, prospect) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const res = await axios.put(\r\n      `/api/prospects/${prospect._id}/paymentMethods`,\r\n      state,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PUT_PAYMENTINFO,\r\n      payload: res.data,\r\n    });\r\n    getProspect(prospect._id);\r\n    console.log(res.data);\r\n  };\r\n\r\n  const putPaymentScheduleItem = async (newPayment, prospect) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      params: {\r\n        _id: prospect._id,\r\n      },\r\n    };\r\n\r\n    const prospectid = prospect._id;\r\n\r\n    const pockage = {\r\n      newPayment,\r\n      prospectid,\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `/api/prospects/${prospect._id}/paymentSchedule/${newPayment._id}`,\r\n      pockage,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: PUT_PAYMENTSCHEDULEITEM,\r\n      payload: res.data,\r\n    });\r\n\r\n    getProspect(prospect._id);\r\n\r\n    updatePaymentStatus(prospect);\r\n  };\r\n\r\n  const putPaymentSchedule = async (iteration, scheduleItem, prospect) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    let sched = [];\r\n\r\n    let dateDisplay1 = new Date(scheduleItem.initialPaymentDate);\r\n    let formattedPostedDate = Intl.DateTimeFormat(\r\n      \"en-US\",\r\n      { timeZone: \"America/Los_Angeles\" },\r\n      {\r\n        year: \"numeric\",\r\n        month: \"numeric\",\r\n        day: \"numeric\",\r\n      }\r\n    ).format(dateDisplay1);\r\n    console.log(scheduleItem.initialPaymentDate, \"THISSSS NIGGGGGER\");\r\n\r\n    let dateDisplay2 = new Date(scheduleItem.secondPaymentDate);\r\n    let formattedPostedDate2 = Intl.DateTimeFormat(\r\n      \"en-US\",\r\n      { timeZone: \"America/Los_Angeles\" },\r\n      {\r\n        year: \"numeric\",\r\n        month: \"numeric\",\r\n        day: \"numeric\",\r\n      }\r\n    ).format(dateDisplay2);\r\n\r\n    const scheduleItem1 = {\r\n      paymentIndex: 1,\r\n      paymentMethod: scheduleItem.initialPaymentMethod,\r\n      paymentAmount: scheduleItem.initialPaymentAmount,\r\n      paymentDate: scheduleItem.initialPaymentDate,\r\n      paymentId: \"\",\r\n    };\r\n\r\n    const scheduleItem2 = {\r\n      paymentIndex: 2,\r\n      paymentMethod: scheduleItem.secondPaymentMethod,\r\n      paymentAmount: scheduleItem.secondPaymentAmount,\r\n      paymentDate: scheduleItem.secondPaymentDate,\r\n      paymentId: \"\",\r\n    };\r\n\r\n    sched.push(scheduleItem1);\r\n\r\n    if (parseInt(scheduleItem2.paymentAmount) > 0) {\r\n      sched.push(scheduleItem2);\r\n    }\r\n\r\n    console.log(sched);\r\n    let startDate;\r\n    let it = parseInt(iteration.installments);\r\n    let int;\r\n    let arr;\r\n    if (iteration.interval != \"\") {\r\n      startDate = Date.parse(scheduleItem.secondPaymentDate);\r\n    }\r\n\r\n    if (iteration.interval === \"weekly\") {\r\n      int = 7 * 86400000; // int is in millisseconds\r\n    } else if (iteration.interval === \"biweekly\") {\r\n      int = 14 * 86400000; // int is in millisseconds\r\n    } else if (iteration.interval === \"monthly\") {\r\n      int = 30.42 * 86400000; // int is in millisseconds\r\n    }\r\n    arr = [];\r\n\r\n    for (let i = 0; i < it; i++)\r\n      arr[i] = {\r\n        paymentIndex: 3 + i,\r\n        paymentDate: new Date(startDate + i * int),\r\n        paymentMethod: iteration.initialPaymentMethod,\r\n        paymentAmount: iteration.installmentAmount,\r\n        paymentId: \"\",\r\n      };\r\n\r\n    arr.pop();\r\n\r\n    const paySched = sched.concat(arr);\r\n\r\n    console.log(paySched);\r\n\r\n    const res = await axios.put(\r\n      `/api/prospects/${prospect._id}/paymentSchedule`,\r\n      paySched,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PUT_PAYMENTSCHEDULE,\r\n      payload: res.data,\r\n    });\r\n    getProspect(prospect._id);\r\n    console.log(res.data);\r\n\r\n    updatePaymentStatus(prospect);\r\n  };\r\n\r\n  const updatePaymentStatus = async (prospect) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.get(\r\n      `/api/prospects/${prospect._id}/paymentSchedule`,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: UPDATE_PAYMENTSTATUS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const updateProspectStatus = async (prospect, status) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const statReq = {\r\n      val: status,\r\n    };\r\n\r\n    const res = await axios.put(\r\n      `/api/prospects/${prospect._id}/status`,\r\n      statReq,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: UPDATE_CLIENTSTATUS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n  const getLead = async (lead) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const res = await axios.get(\r\n      `/api/leads/:id/pinCode?q=${lead.pinCode},${lead.email}`,\r\n      lead,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_LIEN,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  const uploadFile = async (data) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    data.forEach(function (element) {\r\n      element.status = \"new\";\r\n    });\r\n    const res = await axios.post(`/api/leads`, data, config);\r\n\r\n    dispatch({\r\n      type: UPLOAD_FILE,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LeadContext.Provider\r\n      value={{\r\n        dncArray: state.dncArray,\r\n        liens: state.liens,\r\n        fullName: state.fullName,\r\n        lien: state.lien,\r\n        lead: state.lead,\r\n        callIn: state.callIn,\r\n        calls: state.calls,\r\n        worker: state.worker,\r\n        workers: state.workers,\r\n        filters1: state.filters1,\r\n        filters: state.filters,\r\n        workers1: state.workers1,\r\n        note: state.note,\r\n        notes: state.notes,\r\n        currentNote: state.currentNote,\r\n        text: state.text,\r\n        prospect: state.prospect,\r\n        prospects: state.prospects,\r\n        clients: state.clients,\r\n        client: state.client,\r\n        current: state.current,\r\n        currentMethod: state.currentMethod,\r\n        number: state.number,\r\n        claimedBy: state.claimedBy,\r\n        recentLeads: state.recentLeads,\r\n        todaysLeads: state.todaysLeads,\r\n        selectedFile: state.selectedFile,\r\n        loaded: state.loaded,\r\n        vars: state.vars,\r\n        bcc: state.bcc,\r\n        leads: state.leads,\r\n        prospectsRes: state.prospectsRes,\r\n        mailObject: state.mailObject,\r\n        doc: state.doc,\r\n        docs: state.docs,\r\n        mailList: state.mailList,\r\n        dncArray: state.dncArray,\r\n        caseWorkers: state.caseWorkers,\r\n        currentClient: state.currentClient,\r\n        setCurrentClient,\r\n        addLexis,\r\n        setCurrentMethod,\r\n        putPaymentMethod,\r\n        updatePaymentStatus,\r\n        deletePaymentMethod,\r\n        deletePaymentScheduleItem,\r\n        getPaymentMethod,\r\n        putPaymentScheduleItem,\r\n        setFilters,\r\n        pushWorker,\r\n        getTodaysProspects,\r\n        getProspectName,\r\n        setProspect,\r\n        deleteLeads,\r\n        deleteWorker,\r\n        addLead,\r\n        updateProspectStatus,\r\n        setSelectedFile,\r\n        uploadFile,\r\n        parseDb,\r\n        getLead,\r\n        setCalls,\r\n        submitLead,\r\n        popDoc,\r\n        updateLead,\r\n        getResoStatus,\r\n        sendEmail,\r\n        makeDNC,\r\n        searchLeads,\r\n        putResoStatus,\r\n        clearLead,\r\n        clearLeadFields,\r\n        setDocs,\r\n        addLexisProspect,\r\n        clearRecentLead,\r\n        clearNumber,\r\n        putNote,\r\n        postNote,\r\n        getNotes,\r\n        setNotes,\r\n        setCurrentNote,\r\n        deleteNote,\r\n        setDoc,\r\n        setRecentLead,\r\n        postResoStatus,\r\n        setCurrent,\r\n        deleteDoc,\r\n        letCall,\r\n        clearLiens,\r\n        updateProspect,\r\n        getProspects,\r\n        getMyLeads,\r\n        getProspect,\r\n        deleteDups,\r\n        postLogics,\r\n        putPaymentSchedule,\r\n        clearCurrentMethod,\r\n        clearCurrentClient,\r\n      }}>\r\n      {props.children}\r\n    </LeadContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LeadState;\r\n","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\splash\\TakeMeOffTheList.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\splash\\FreshStart.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\pages\\TaxGroup.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\pages\\LienViewer.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\context\\types.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\context\\lead\\leadContext.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\context\\lead\\leadReducer.js",["152","153","154","155","156","157"],"import {\r\n  UPLOAD_FILE,\r\n  SET_FILE,\r\n  PARSE_LIST,\r\n  SET_LIST,\r\n  UPDATE_CLIENT,\r\n  UPDATE_LEAD,\r\n  DELETE_LEADS,\r\n  MAKE_DNC,\r\n  SUBMIT_LEAD,\r\n  GET_LIEN,\r\n  SEARCH_LIENS,\r\n  POST_LEAD,\r\n  SET_CALLS,\r\n  GET_LEAD,\r\n  GET_LEADS,\r\n  CLEAR_LEAD,\r\n  SET_CURRENT,\r\n  LET_CALL,\r\n  CLEAR_LIENS,\r\n  CLEAR_NUMBER,\r\n  POST_LOGICS,\r\n  GET_FIELDS,\r\n  POST_PREV,\r\n  SET_RECENT,\r\n  SET_RECENTLEAD,\r\n  CLEAR_LEADFIELDS,\r\n  CLEAR_RECENTLEAD,\r\n  UPDATE_PROSPECT,\r\n  POST_NOTE,\r\n  GET_NOTES,\r\n  PUT_NOTE,\r\n  SET_NOTE,\r\n  SET_NOTES,\r\n  DELETE_NOTE,\r\n  ADD_LEXIS,\r\n  SET_PROSPECT,\r\n  GET_NAME,\r\n  PUSH_WORKER,\r\n  PUT_RESO,\r\n  PUT_PAYMENTINFO,\r\n  PUT_PAYMENTSCHEDULE,\r\n  PUT_PAYMENTSCHEDULEITEM,\r\n  DELETE_PAYMENTMETHOD,\r\n  DELETE_PAYMENTSCHEDULEITEM,\r\n  GET_TODAYSPROSPECTS,\r\n  SET_CURRENTMETHOD,\r\n  DELETE_WORKER,\r\n  GET_PAYMENTMETHOD,\r\n  SET_CURRENTCLIENT,\r\n  CLEAR_CURRENTCLIENT,\r\n  UPDATE_PAYMENTSTATUS,\r\n  CLEAR_CURRENTMETHOD,\r\n  ADD_LEXISPROSPECT,\r\n  GET_FILE,\r\n  SET_DOC,\r\n  SET_WORKERS,\r\n  POP_DOC,\r\n  SEND_EMAIL,\r\n  DELETE_DUPS,\r\n  SET_FILTERS,\r\n  DELETE_DOC,\r\n  SET_DOCS,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case DELETE_DOC:\r\n      return {\r\n        ...state,\r\n        docs: state.docs.filter((doc) => doc._id !== action.payload),\r\n      };\r\n    case SET_DOCS:\r\n      return {\r\n        ...state,\r\n        docs: action.payload,\r\n      };\r\n\r\n    case DELETE_NOTE:\r\n      return {\r\n        ...state,\r\n        notes: state.notes.filter((note) => note.id !== action.payload),\r\n      };\r\n\r\n    case DELETE_DUPS:\r\n      return {\r\n        ...state,\r\n        prospects: state.prospects.filter(\r\n          (prospect) => prospect.lienid !== action.payload\r\n        ),\r\n      };\r\n    case UPDATE_PAYMENTSTATUS:\r\n      return {\r\n        ...state,\r\n        prospect: action.payload,\r\n      };\r\n    case PUSH_WORKER:\r\n      return {\r\n        ...state,\r\n        caseWorkers: action.payload,\r\n      };\r\n    case SEND_EMAIL:\r\n      return {\r\n        ...state,\r\n        formData: action.payload,\r\n      };\r\n    case GET_FILE:\r\n      return {\r\n        ...state,\r\n        file: action.payload,\r\n      };\r\n    case SET_WORKERS:\r\n      return {\r\n        ...state,\r\n        workers: action.payload,\r\n      };\r\n    case SET_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload,\r\n      };\r\n    case ADD_LEXIS:\r\n      return {\r\n        ...state,\r\n        lead: action.payload,\r\n      };\r\n    case ADD_LEXISPROSPECT:\r\n      return {\r\n        ...state,\r\n        prospect: action.payload,\r\n      };\r\n    case SET_DOC:\r\n      return {\r\n        ...state,\r\n        doc: action.payload,\r\n      };\r\n\r\n    case POP_DOC:\r\n      return {\r\n        ...state,\r\n        doc: action.payload,\r\n      };\r\n    case GET_TODAYSPROSPECTS:\r\n      return {\r\n        ...state,\r\n        todaysLeads: action.payload,\r\n      };\r\n\r\n    case PUT_PAYMENTSCHEDULE:\r\n      return {\r\n        ...state,\r\n        paymentSchedule: action.payload,\r\n      };\r\n    case PUT_PAYMENTSCHEDULEITEM:\r\n      return {\r\n        ...state,\r\n        newPayment: action.payload,\r\n      };\r\n\r\n    case GET_PAYMENTMETHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    case POST_NOTE:\r\n      return {\r\n        ...state,\r\n        note: action.payload,\r\n      };\r\n    case PUT_NOTE:\r\n      return {\r\n        ...state,\r\n        note: action.payload,\r\n      };\r\n    case PUT_RESO:\r\n      return {\r\n        ...state,\r\n        formData: action.payload,\r\n      };\r\n    case PUT_PAYMENTINFO:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    case GET_NAME:\r\n      return {\r\n        ...state,\r\n        fullName: action.payload,\r\n      };\r\n\r\n    case GET_NOTES:\r\n      return {\r\n        ...state,\r\n        notes: action.payload,\r\n      };\r\n    case SET_NOTES:\r\n      return {\r\n        ...state,\r\n        notes: action.payload,\r\n      };\r\n    case SET_CURRENTMETHOD:\r\n      return {\r\n        ...state,\r\n        currentMethod: action.payload,\r\n      };\r\n    case SET_CURRENTCLIENT:\r\n      return {\r\n        ...state,\r\n        currentClient: action.payload,\r\n      };\r\n\r\n    case CLEAR_CURRENTMETHOD:\r\n      return {\r\n        ...state,\r\n        currentMethod: null,\r\n      };\r\n    case CLEAR_CURRENTCLIENT:\r\n      return {\r\n        ...state,\r\n        currentClient: null,\r\n      };\r\n    case SET_NOTE:\r\n      return {\r\n        ...state,\r\n        currentNote: action.payload,\r\n      };\r\n    case SET_PROSPECT:\r\n      return {\r\n        ...state,\r\n        prospect: action.payload,\r\n      };\r\n\r\n    case UPLOAD_FILE:\r\n      return {\r\n        ...state,\r\n        selectedFile: action.payload,\r\n        loaded: 0,\r\n      };\r\n    case UPLOAD_FILE:\r\n      return {\r\n        ...state,\r\n        file: action.payload,\r\n      };\r\n    case DELETE_LEADS:\r\n      return {\r\n        ...state,\r\n        leads: state.leads.filter((lead) => lead._id !== action.payload),\r\n      };\r\n    case DELETE_PAYMENTSCHEDULEITEM:\r\n      return {\r\n        ...state,\r\n        payment: state.prospect.paymentSchedule.filter(\r\n          (payment) => payment._id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case DELETE_WORKER:\r\n      return {\r\n        ...state,\r\n        caseWorker:\r\n          state.prospect.caseWorkers.originators.filter(\r\n            (caseWorker) => caseWorker._id !== action.payload\r\n          ) &&\r\n          state.prospect.caseWorkers.documentProcessors.filter(\r\n            (caseWorker) => caseWorker._id !== action.payload\r\n          ) &&\r\n          state.prospect.caseWorkers.loanProcessors.filter(\r\n            (caseWorker) => caseWorker._id !== action.payload\r\n          ) &&\r\n          state.prospect.caseWorkers.taxPreparers.filter(\r\n            (caseWorker) => caseWorker._id !== action.payload\r\n          ) &&\r\n          state.prospect.caseWorkers.federalReso.filter(\r\n            (caseWorker) => caseWorker._id !== action.payload\r\n          ) &&\r\n          state.prospect.caseWorkers.stateReso.filter(\r\n            (caseWorker) => caseWorker._id !== action.payload\r\n          ) &&\r\n          state.prospect.caseWorkers.upsells.filter(\r\n            (caseWorker) => caseWorker._id !== action.payload\r\n          ),\r\n      };\r\n\r\n    case DELETE_PAYMENTMETHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: state.prospect.paymentMethods.filter(\r\n          (paymentMethod) => paymentMethod._id !== action.payload\r\n        ),\r\n      };\r\n    case DELETE_LEADS:\r\n      return {\r\n        ...state,\r\n        leads: state.leads.filter((lead) => lead._id !== action.payload),\r\n      };\r\n\r\n    case UPDATE_CLIENT:\r\n      return {\r\n        ...state,\r\n        selectedFile: action.payload,\r\n        loaded: 0,\r\n      };\r\n\r\n    case UPDATE_LEAD:\r\n      return {\r\n        ...state,\r\n        campaign: action.payload,\r\n      };\r\n\r\n    case GET_LIEN:\r\n      return {\r\n        ...state,\r\n        lien: action.payload,\r\n      };\r\n    case SEARCH_LIENS:\r\n      return {\r\n        ...state,\r\n        leads: action.payload,\r\n      };\r\n\r\n    case SUBMIT_LEAD:\r\n      return {\r\n        ...state,\r\n        lead: action.payload,\r\n      };\r\n    case SET_FILE:\r\n      return {\r\n        ...state,\r\n        selectedFile: action.payload,\r\n      };\r\n    case MAKE_DNC:\r\n      return {\r\n        ...state,\r\n        dncArray: action.payload,\r\n      };\r\n\r\n    case PARSE_LIST:\r\n      return {\r\n        ...state,\r\n        mailList: action.payload,\r\n      };\r\n\r\n    case SET_LIST:\r\n      return {\r\n        ...state,\r\n        mailList: action.payload,\r\n      };\r\n    case POST_LEAD:\r\n      return {\r\n        ...state,\r\n        prospect: action.payload,\r\n      };\r\n    case SET_RECENT:\r\n      return {\r\n        ...state,\r\n        recentLeads: action.payload,\r\n      };\r\n\r\n    case POST_PREV:\r\n      return {\r\n        ...state,\r\n        lead: action.payload,\r\n      };\r\n    case POST_LOGICS:\r\n      return {\r\n        ...state,\r\n        lead: action.payload,\r\n      };\r\n    case SET_CALLS:\r\n      return {\r\n        ...state,\r\n        calls: action.payload,\r\n      };\r\n    case SET_RECENTLEAD:\r\n      return {\r\n        ...state,\r\n        recentLead: action.payload,\r\n      };\r\n\r\n    case GET_LEAD:\r\n      return {\r\n        ...state,\r\n        prospect: action.payload,\r\n      };\r\n    case GET_LEADS:\r\n      return {\r\n        ...state,\r\n        prospectsRes: action.payload,\r\n      };\r\n    case GET_FIELDS:\r\n      return {\r\n        ...state,\r\n        lead: action.payload,\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case LET_CALL:\r\n      return {\r\n        ...state,\r\n        callIn: action.payload,\r\n      };\r\n    case CLEAR_LEAD:\r\n      return {\r\n        ...state,\r\n        lead: {},\r\n      };\r\n    case CLEAR_LEADFIELDS:\r\n      return {\r\n        ...state,\r\n        leadfields: {},\r\n      };\r\n    case CLEAR_RECENTLEAD:\r\n      return {\r\n        ...state,\r\n        recentLead: {},\r\n      };\r\n    case CLEAR_NUMBER:\r\n      return {\r\n        ...state,\r\n        callIn: null,\r\n      };\r\n    case SEARCH_LIENS:\r\n      return {\r\n        ...state,\r\n        leads: action.payload,\r\n      };\r\n\r\n    case CLEAR_LIENS:\r\n      return {\r\n        ...state,\r\n        leads: [],\r\n      };\r\n    case UPDATE_LEAD:\r\n      return {\r\n        ...state,\r\n        leads: state.leads.map((lead) =>\r\n          lead._id === action.payload._id ? action.payload : lead\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\utils\\setAuthToken.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\layout\\Footer.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\layout\\StickyNavbar.js",["158","159","160"],"import React, { useEffect, useState, Fragment, useContext } from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\nimport logo from \"../../images/logo.png\";\r\n\r\nconst StickyNavbar = () => {\r\n  const [style, setStyle] = useState({});\r\n\r\n  const position = window.pageYOffset;\r\n  const onClick = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    setStyle({\r\n      backgroundColor: \"#f4f4f4\",\r\n      overflowY: \"hidden\",\r\n      width: \"95vw\",\r\n      marginLeft: \"100px\",\r\n      overflowX: \"hidden\",\r\n    });\r\n  }, []);\r\n\r\n  const location = useLocation();\r\n  useEffect(() => {\r\n    if (position === 0) {\r\n      setStyle({\r\n        backgroundColor: \"rgba(52, 52, 52, 0.1)\",\r\n        zIndex: \"999999999999999\",\r\n      });\r\n    }\r\n  }, [position, setStyle]);\r\n\r\n  const onScroll = () => {\r\n    setStyle({\r\n      overflowY: \"hidden\",\r\n      overflowX: \"hidden\",\r\n      width: \"95vw\",\r\n      marginLeft: \"10px\",\r\n      position: \"sticky\",\r\n      top: \"0\",\r\n      background: \"black\",\r\n      zIndex: \"999999999999999\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div onScroll={onScroll} style={style}>\r\n      <p className='text-primary'>\r\n        <Link to='/taxgroup' onClick={onClick}>\r\n          <img\r\n            src={logo}\r\n            alt='National Tax Group'\r\n            style={{\r\n              width: \"60px\",\r\n              height: \"60px\",\r\n              borderRadius: \"10px\",\r\n              opacity: \"50%\",\r\n            }}\r\n          />{\" \"}\r\n          National Tax Group\r\n        </Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StickyNavbar;\r\n","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\layout\\About.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\layout\\Hero.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\contactus\\ContactForm.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\contactus\\Feedback.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\About\\Blogs.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\lienviewer\\LienSearch.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\lienviewer\\LienHero.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\lienviewer\\StateItem.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\layout\\SmallForm.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\About\\BlogItem.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\consultants\\PlanCards.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\solutions\\ToolSelect.js",["161"],"import React, { Fragment, useState, useEffect } from \"react\";\n\nconst ToolSelect = () => {\n  const [price, setPrice] = useState(0);\n  const [clicked, setClicked] = useState(\"\");\n\n  let cost = 0;\n\n  useEffect(() => {\n    if (clicked === \"starter\") {\n      setPrice(1000);\n    } else if (clicked === \"essential\") {\n      setPrice(2000);\n    } else if (clicked === \"accrual\") {\n      setPrice(price * 1.2);\n    } else if (clicked === \"cash\") {\n      setPrice(price * 1.1);\n    } else if (clicked === \"pr\") {\n      setPrice(price + 1250);\n    } else if (clicked === \"tp\") {\n      setPrice(price + 750);\n    } else if (clicked === \"compliance\") {\n      setPrice(price + 2000);\n    } else if (clicked === \"entity\") {\n      setPrice(price + 400);\n    }\n  }, [clicked, setPrice, price]);\n\n  useEffect(() => {\n    if (price !== 0) {\n      cost = price.toFixed(2);\n    }\n  }, [price, cost]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <h3 className='lead text-center text-primary'>Estimate Your Fees</h3>\n      <div className='container bg-dark grid-3' style={{ width: \"90%\" }}>\n        <div>\n          <br />\n          <ul>\n            <li className='card bg-success'>Do I have to file</li>\n            <li className='card bg-success'>Up Front Fee</li>\n            <li className='card bg-success'>Do I have debt</li>\n            <li className='card bg-success py-3'> Additional Services </li>\n            <li className='card bg-success'>One Time Payment</li>\n          </ul>\n        </div>\n        <div>\n          <br />\n          <form onSubmit={onSubmit}>\n            <ul>\n              <li className='card bg-light' style={{ height: \"3.8rem\" }}>\n                <button\n                  onClick={() => setClicked(\"starter\")}\n                  className='btn btn-primary btn-block'>\n                  File Federal Only\n                </button>\n              </li>\n              <li className='card bg-light' style={{ height: \"3.8rem\" }}>\n                <h4 className='lead all-center'>\n                  <span\n                    className={\n                      clicked === \"starter\" ? \"text-primary\" : \"text-dark\"\n                    }>\n                    $1000\n                  </span>\n                </h4>\n              </li>\n              <li className='card grid-2 bg-light' style={{ height: \"3.8rem\" }}>\n                <div>\n                  <h2>\n                    <button\n                      onClick={() => setClicked(\"cash\")}\n                      className='btn btn-danger btn-sm'\n                      style={{ margin: \"auto\" }}>\n                      Under 10k\n                    </button>\n                  </h2>\n                </div>\n                <div>\n                  <h2>\n                    <button\n                      onClick={() => setClicked(\"accrual\")}\n                      className='btn btn-primary btn-sm'\n                      style={{ margin: \"auto\" }}>\n                      Over 10k\n                    </button>\n                  </h2>\n                </div>\n              </li>\n\n              <li className='card bg-light'>\n                <div className='grid-2'>\n                  <div>\n                    <h2>\n                      <button\n                        onClick={() => setClicked(\"entity\")}\n                        className='btn btn-primary btn-sm my'\n                        style={{ marginLeft: \"20px\" }}>\n                        Entity\n                      </button>\n                      <button\n                        onClick={() => setClicked(\"compliance\")}\n                        className='btn btn-success btn-sm'\n                        style={{ marginLeft: \"20px\" }}>\n                        Compliance\n                      </button>\n                    </h2>\n                  </div>\n                  <div>\n                    <h2>\n                      <button\n                        onClick={() => setClicked(\"tp\")}\n                        className='btn btn-primary btn-sm my'\n                        style={{ marginLeft: \"20px\" }}>\n                        Taxes\n                      </button>\n                      <br className='' />\n\n                      <button\n                        onClick={() => setClicked(\"pr\")}\n                        className='btn btn-danger btn-sm'\n                        style={{ marginLeft: \"20px\" }}>\n                        Payroll\n                      </button>\n                    </h2>\n                  </div>\n                </div>\n              </li>\n              <li>\n                <div className='text-center gridspan' style={{ width: \"200%\" }}>\n                  <h4>\n                    <span\n                      className='text-center lead'\n                      style={{ width: \"200%\", height: \"200%\" }}>\n                      {price !== 0 ? \"$\" + price.toFixed(2) : \"\"}\n                    </span>\n                  </h4>\n                </div>\n              </li>\n            </ul>\n          </form>\n        </div>\n\n        <div>\n          <br />\n          <form onSubmit={onSubmit}>\n            <ul>\n              <li className='card bg-light' style={{ height: \"3.8rem\" }}>\n                <button\n                  onClick={() => setClicked(\"essential\")}\n                  className='btn btn-primary btn-block'>\n                  File State and Federal\n                </button>\n              </li>\n              <li className='card bg-light' style={{ height: \"3.8rem\" }}>\n                <h4 className='lead all-center'>\n                  <span\n                    className={\n                      clicked === \"essential\" ? \"text-primary\" : \"text-dark\"\n                    }>\n                    $2000\n                  </span>\n                </h4>\n              </li>\n              <li className='card grid-2 bg-light' style={{ height: \"3.8rem\" }}>\n                <div>\n                  <h2>\n                    <button\n                      onClick={() => setClicked(\"cash\")}\n                      className='btn btn-danger btn-sm'\n                      style={{ margin: \"auto\" }}>\n                      Under 10k\n                    </button>\n                  </h2>\n                </div>\n                <div>\n                  <h2>\n                    <button\n                      onClick={() => setClicked(\"accrual\")}\n                      className='btn btn-primary btn-sm'\n                      style={{ margin: \"auto\" }}>\n                      Over 10k\n                    </button>\n                  </h2>\n                </div>\n              </li>\n\n              <li className='card bg-light'>\n                <div className='grid-2'>\n                  <div>\n                    <h2>\n                      <button\n                        onClick={() => setClicked(\"entity\")}\n                        className='btn btn-primary btn-sm my'\n                        style={{ marginLeft: \"20px\" }}>\n                        Entity\n                      </button>\n                      <button\n                        onClick={() => setClicked(\"compliance\")}\n                        className='btn btn-success btn-sm'\n                        style={{ marginLeft: \"20px\" }}>\n                        Compliance\n                      </button>\n                    </h2>\n                  </div>\n                  <div>\n                    <h2>\n                      <button\n                        onClick={() => setClicked(\"tp\")}\n                        className='btn btn-primary btn-sm my'\n                        style={{ marginLeft: \"20px\" }}>\n                        Taxes\n                      </button>\n                      <br className='' />\n\n                      <button\n                        onClick={() => setClicked(\"pr\")}\n                        className='btn btn-danger btn-sm'\n                        style={{ marginLeft: \"20px\" }}>\n                        Payroll\n                      </button>\n                    </h2>\n                  </div>\n                </div>\n              </li>\n            </ul>\n          </form>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ToolSelect;\n","C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\consultants\\Company.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\About\\Modal.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\About\\BlogContent.js",[],"C:\\Webdev\\Email\\nationaltaxgroup\\client\\src\\components\\pages\\website\\consultants\\EmployeeItem.js",[],{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":6,"column":3,"nodeType":"168","messageId":"169","endLine":6,"endColumn":14},{"ruleId":"166","severity":1,"message":"170","line":1,"column":29,"nodeType":"168","messageId":"169","endLine":1,"endColumn":39},{"ruleId":"166","severity":1,"message":"171","line":15,"column":3,"nodeType":"168","messageId":"169","endLine":15,"endColumn":16},{"ruleId":"166","severity":1,"message":"172","line":64,"column":3,"nodeType":"168","messageId":"169","endLine":64,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":87,"column":5,"nodeType":"175","messageId":"176","endLine":87,"endColumn":10},{"ruleId":"173","severity":1,"message":"177","line":93,"column":5,"nodeType":"175","messageId":"176","endLine":93,"endColumn":9},{"ruleId":"173","severity":1,"message":"178","line":100,"column":5,"nodeType":"175","messageId":"176","endLine":100,"endColumn":9},{"ruleId":"166","severity":1,"message":"179","line":238,"column":11,"nodeType":"168","messageId":"169","endLine":238,"endColumn":17},{"ruleId":"166","severity":1,"message":"180","line":368,"column":18,"nodeType":"168","messageId":"169","endLine":368,"endColumn":23},{"ruleId":"166","severity":1,"message":"181","line":381,"column":13,"nodeType":"168","messageId":"169","endLine":381,"endColumn":27},{"ruleId":"166","severity":1,"message":"181","line":396,"column":13,"nodeType":"168","messageId":"169","endLine":396,"endColumn":27},{"ruleId":"166","severity":1,"message":"182","line":473,"column":17,"nodeType":"168","messageId":"169","endLine":473,"endColumn":30},{"ruleId":"183","severity":1,"message":"184","line":474,"column":48,"nodeType":"185","messageId":"186","endLine":474,"endColumn":50},{"ruleId":"187","severity":1,"message":"188","line":499,"column":17,"nodeType":"189","messageId":"190","endLine":552,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":547,"column":19,"nodeType":"193","messageId":"176","endLine":551,"endColumn":27},{"ruleId":"166","severity":1,"message":"194","line":676,"column":7,"nodeType":"168","messageId":"169","endLine":676,"endColumn":12},{"ruleId":"166","severity":1,"message":"195","line":681,"column":7,"nodeType":"168","messageId":"169","endLine":681,"endColumn":12},{"ruleId":"166","severity":1,"message":"196","line":682,"column":7,"nodeType":"168","messageId":"169","endLine":682,"endColumn":16},{"ruleId":"166","severity":1,"message":"197","line":683,"column":7,"nodeType":"168","messageId":"169","endLine":683,"endColumn":19},{"ruleId":"166","severity":1,"message":"198","line":684,"column":7,"nodeType":"168","messageId":"169","endLine":684,"endColumn":10},{"ruleId":"166","severity":1,"message":"199","line":685,"column":7,"nodeType":"168","messageId":"169","endLine":685,"endColumn":10},{"ruleId":"166","severity":1,"message":"200","line":687,"column":7,"nodeType":"168","messageId":"169","endLine":687,"endColumn":11},{"ruleId":"201","severity":1,"message":"202","line":905,"column":27,"nodeType":"203","messageId":"176","endLine":905,"endColumn":31},{"ruleId":"166","severity":1,"message":"204","line":1043,"column":9,"nodeType":"168","messageId":"169","endLine":1043,"endColumn":28},{"ruleId":"166","severity":1,"message":"205","line":1055,"column":9,"nodeType":"168","messageId":"169","endLine":1055,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":1092,"column":28,"nodeType":"208","messageId":"176","endLine":1092,"endColumn":30},{"ruleId":"173","severity":1,"message":"209","line":1249,"column":9,"nodeType":"175","messageId":"176","endLine":1249,"endColumn":17},{"ruleId":"166","severity":1,"message":"210","line":29,"column":3,"nodeType":"168","messageId":"169","endLine":29,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":66,"column":1,"nodeType":"213","endLine":447,"endColumn":3},{"ruleId":"191","severity":1,"message":"192","line":239,"column":5,"nodeType":"193","messageId":"176","endLine":243,"endColumn":9},{"ruleId":"191","severity":1,"message":"192","line":291,"column":5,"nodeType":"193","messageId":"176","endLine":295,"endColumn":9},{"ruleId":"191","severity":1,"message":"192","line":425,"column":5,"nodeType":"193","messageId":"176","endLine":429,"endColumn":9},{"ruleId":"191","severity":1,"message":"192","line":436,"column":5,"nodeType":"193","messageId":"176","endLine":442,"endColumn":9},{"ruleId":"166","severity":1,"message":"214","line":1,"column":38,"nodeType":"168","messageId":"169","endLine":1,"endColumn":46},{"ruleId":"166","severity":1,"message":"170","line":1,"column":48,"nodeType":"168","messageId":"169","endLine":1,"endColumn":58},{"ruleId":"166","severity":1,"message":"215","line":23,"column":9,"nodeType":"168","messageId":"169","endLine":23,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":31,"column":14,"nodeType":"203","endLine":31,"endColumn":30},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'UPDATE_CLIENT' is defined but never used.","'SET_WORKERS' is defined but never used.","no-dupe-keys","Duplicate key 'leads'.","ObjectExpression","unexpected","Duplicate key 'lead'.","Duplicate key 'note'.","'config' is assigned a value but never used.","'notes' is assigned a value but never used.","'paymentMethods' is assigned a value but never used.","'searchResults' is assigned a value but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-duplicate-case","Duplicate case label.","SwitchCase","'state' is assigned a value but never used.","'lexId' is assigned a value but never used.","'compliant' is assigned a value but never used.","'filingStatus' is assigned a value but never used.","'cpa' is assigned a value but never used.","'ssn' is assigned a value but never used.","'note' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","'formattedPostedDate' is assigned a value but never used.","'formattedPostedDate2' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","Duplicate key 'dncArray'.","'UPDATE_PROSPECT' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Fragment' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'cost' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation"]